from sys import argv
from main import *
from argparse import ArgumentParser

def generate_puzzle():
    print "npuzzle [-h] [-s] [-u] [-i ITERATIONS] size"
    print "press enter to set: 'npuzzle 3"
    npuzzle_gen = raw_input("npuzzle ")
    if not npuzzle_gen:
        npuzzle_gen = ['3']
    else:
        npuzzle_gen = npuzzle_gen.split()
    out = check_output(['python', 'npuzzle-gen.py'] + npuzzle_gen)
    print out
    return NpuzzleBoard(out)

def read_from_file():
    puzzle_file = askopenfile()
    return NpuzzleBoard(puzzle_file)


if __name__ == "__main__":
    available_flags = {
        "-g": "Puzzle generated from npyzzle-gen.py (default)",
        "-f": "Read puzzle from file",
        "-m": "Heuristic: Manhattan-distance (default)",
        "-p": "Heuristic: Misplaced titles"
    }
    if len(set(argv[1:]) - set(available_flags.keys())) > 0:
        for arg in argv[1:]:
            if arg not in available_flags.keys():
                print "Flag {} doesn't support".format(arg)

    if '-g' in argv:
        board = generate_puzzle()
    elif '-f' in argv:
        board = read_from_file()

    # if not board.is_solvable():
    #     print("This puzzle is unsolvable")
    # else:
    #     from time import time
    #     t = time()
    #     print solve_puzzle(board)
    #     print "TIME = " + str(time() - t)